apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: exotic-travel
data:
  # Database configuration
  DB_HOST: "postgres-service"
  DB_PORT: "5432"
  DB_NAME: "exotic_travel_prod"
  DB_USER: "postgres"
  
  # Redis configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  
  # Application configuration
  ENVIRONMENT: "production"
  JWT_ISSUER: "exotic-travel-booking"
  JWT_AUDIENCE: "exotic-travel-api"
  JWT_ACCESS_TTL: "15m"
  JWT_REFRESH_TTL: "168h"
  
  # Rate limiting
  RATE_LIMIT_RPS: "10"
  RATE_LIMIT_BURST: "20"
  MAX_REQUEST_SIZE: "10485760"
  
  # Security
  TLS_ENABLED: "true"
  AUDIT_ENABLED: "true"
  DEBUG_MODE: "false"
  
  # SMTP configuration
  SMTP_PORT: "587"
  
  # Frontend configuration
  NEXT_PUBLIC_API_URL: "https://api.yourdomain.com"
  NEXT_PUBLIC_APP_URL: "https://yourdomain.com"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: exotic-travel
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        upstream backend {
            server backend-service:8080;
        }
        
        upstream frontend {
            server frontend-service:3000;
        }
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=web:10m rate=30r/s;
        
        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # API Server
        server {
            listen 80;
            server_name api.yourdomain.com;
            
            location / {
                limit_req zone=api burst=20 nodelay;
                proxy_pass http://backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
        
        # Frontend Server
        server {
            listen 80;
            server_name yourdomain.com www.yourdomain.com;
            
            location / {
                limit_req zone=web burst=50 nodelay;
                proxy_pass http://frontend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
    }
